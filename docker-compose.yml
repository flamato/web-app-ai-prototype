version: "3.2"

services:
  webapp:
    container_name: webapp
    image: webapp:django
    build:
      context: ./
      dockerfile: web.Dockerfile
      args:
        - PYTHON_VERSION=3
        - UBUNTU_VERSION=18.04
        - USER=django
        - WEB_FRAMEWORK=django
    command: tail -F anything
    depends_on:
      - webapp-db
    ports:
      - "8000:8000"
    networks:
      frontend:
        aliases:
          - front
      backend:
        aliases:
          - back
    restart: always
    environment:
      - ALLOWED_HOSTS='192.168.0.24'
      - DISPLAY
    volumes:
      - type: volume
        source: conf
        target: /home/django
        volume:
          nocopy: true
      - type: volume
        source: database
        target: /home/django/data
        volume:
          nocopy: true
      - type: volume
        source: logs
        target: /home/django/logs
        volume:
          nocopy: true
      - type: bind
        source: $HOME/.Xauthority
        target: /home/django/.Xauthority
      - type: bind
        source: ./webapp
        target: /usr/src/app/


  webapp-db:
    container_name: webapp_db
    image: webapp_db:postgres
    build:
      context: ./
      dockerfile: db.Dockerfile
      args:
      - PYTHON_VERSION=3
      - UBUNTU_VERSION=16.04
      - DBMS=postgres # or pymongo
#      - PLATFORM: "AWS" # or GCP
    command: tail -F anything
    networks:
      backend:
        aliases:
          - database
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_DB: web_app_db
    volumes:
      - type: volume
        source: database
        target: /var/lib/postgres/data
        volume:
          nocopy: true
      - type: volume
        source: models
        target: /usr/src/app/models
        volume:
          nocopy: true

networks:
  frontend:
  backend:

volumes:
  database:
  conf:
  logs:
  models:
